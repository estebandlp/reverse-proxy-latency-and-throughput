worker_processes 1;

events {
    # Maximum number of simultaneous connections (affects throughput)
    worker_connections 1024;
    # multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging Settings
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '$request_time'; # Track response time

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log;

    # Basic Settings
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    
    # Timeouts
    # Affects how long connections stay open (impacts throughput)
    keepalive_timeout  65;
    
    # Gzip Settings
    gzip  on;

    # Rate Limiting (optional - affects throughput)
    # Uncomment and adjust as needed
    # limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

    upstream node-demo {
        server localhost:3000;
    }

    # Node.js Application Server
    server {
        listen 80;
        server_name node-latency-demo localhost;

        # API Endpoints
        location / {
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header test-proxy-header "Proxy-Done-Right";
        }

        # Fast endpoint demonstration
        location /fast {
            proxy_pass http://localhost:3000/fast;
            proxy_set_header test-proxy-header "Proxy-Done-Right";
        }
        
        # Slow endpoint demonstration
        location /slow {
            proxy_pass http://localhost:3000/slow;
            proxy_set_header test-proxy-header "Proxy-Done-Right";
            proxy_read_timeout 10s; # Needed for the 2s delay
        }

        # Memory-like endpoint demonstration
        location /memory {
            proxy_pass http://localhost:3000/memory;
            proxy_set_header test-proxy-header "Proxy-Done-Right";
        }

        # Database-like endpoint demonstration
        location /database {
            proxy_pass http://localhost:3000/database;
            proxy_set_header test-proxy-header "Proxy-Done-Right";
        }

        # Health check
        location /health {
            proxy_pass http://localhost:3000/health;
            proxy_set_header Host $host;
            proxy_set_header X-Via-Nginx true;
            access_log on;
        }
        
        # Custom error pages
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
} 